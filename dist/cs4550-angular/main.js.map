{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/commons/constants.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/enrolled-sections/enrolled-sections.component.css","webpack:///./src/app/enrolled-sections/enrolled-sections.component.html","webpack:///./src/app/enrolled-sections/enrolled-sections.component.ts","webpack:///./src/app/enrollments/enrollments.component.css","webpack:///./src/app/enrollments/enrollments.component.html","webpack:///./src/app/enrollments/enrollments.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/course.model.client.ts","webpack:///./src/app/models/user.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/nav-bar/nav-bar.component.css","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-editor/section-editor.component.css","webpack:///./src/app/section-editor/section-editor.component.html","webpack:///./src/app/section-editor/section-editor.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/data-sharing.service.ts","webpack:///./src/app/services/enrollment.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1>\\n  Section Editor\\n</h1>\\n<app-section-editor></app-section-editor>\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {Course} from \"../models/course.model.client\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\nimport {Section} from \"../models/section.model.client\";\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { Constants } from './commons/constants';\nimport {FormsModule} from \"@angular/forms\";\nimport {CourseNavigatorServiceClient} from \"./services/course-navigator.service.client\";\nimport { CourseNavigatorComponent } from './course-navigator/course-navigator.component';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport {CourseServiceClient} from \"./services/course.service.client\";\nimport {routing} from \"./app.routing\";\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './module-list/module-list.component';\nimport {ModuleServiceClient} from \"./services/module.service.client\";\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\nimport {LessonServiceClient} from \"./services/lesson.service.client\";\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from \"./services/widget.service.client\";\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {UserServiceClient} from \"./services/user.service.client\";\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { DataSharingService } from './services/data-sharing.service';\nimport { AdminComponent } from './admin/admin.component';\nimport { SectionServiceClient } from './services/section.service.client';\nimport { EnrollmentServiceClient } from './services/enrollment.service.client';\nimport { SectionListComponent } from './section-list/section-list.component';\nimport { SectionEditorComponent } from './section-editor/section-editor.component';\nimport { EnrollmentsComponent } from './enrollments/enrollments.component';\nimport { EnrolledSectionsComponent } from './enrolled-sections/enrolled-sections.component'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CourseNavigatorComponent,\n    WhiteBoardComponent,\n    CourseGridComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    WidgetListComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    NavBarComponent,\n    AdminComponent,\n    SectionListComponent,\n    SectionEditorComponent,\n    EnrollmentsComponent,\n    EnrolledSectionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    routing,\n    FormsModule\n  ],\n  providers: [\n    Constants,\n    CourseNavigatorServiceClient,\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    WidgetServiceClient,\n    UserServiceClient,\n    DataSharingService,\n    EnrollmentServiceClient,\n    SectionServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { WhiteBoardComponent } from \"./white-board/white-board.component\";\nimport {CourseViewerComponent} from \"./course-viewer/course-viewer.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {ProfileComponent} from \"./profile/profile.component\";\nimport { AdminComponent } from \"./admin/admin.component\";\nconst appRoutes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: WhiteBoardComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegisterComponent},\n  { path: 'profile', component: ProfileComponent},\n  { path: 'course/:courseId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: '**', component: WhiteBoardComponent} // last\n];\nexport const routing = RouterModule.forRoot(appRoutes);","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class Constants {\n BASE_API_URL = 'https://murmuring-dawn-26453.herokuapp.com/api';\n NODE_API_URL = 'https://cs4550-aqian-node.herokuapp.com/api';\n USER_API_URL = this.NODE_API_URL + '/user';\n COURSE_API_URL = this.BASE_API_URL + '/course';\n NODE_COURSE_API_URL = this.NODE_API_URL + '/course';\n LESSON_API_URL = this.BASE_API_URL + '/lesson';\n SECTION_API_URL = this.NODE_API_URL + '/section';\n STUDENT_API_URL = this.NODE_API_URL + '/student';\n}\n\n","module.exports = \".card {\\n  margin-bottom: 15px;\\n}\"","module.exports = \"<h2>Course Grid</h2>\\n\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <a routerLink=\\\"/course/{{course.id}}\\\"\\n           class=\\\"btn btn-primary\\\">View</a>\\n           <app-enrollments *ngIf=\\\"user && !user.isAdmin\\\" [course]=\\\"course\\\" [courseId]=\\\"course.id\\\">\\n           </app-enrollments>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {Course} from \"../models/course.model.client\";\nimport {User} from \"../models/user.model.client\";\nimport { UserServiceClient } from '../services/user.service.client';\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n    private userService: UserServiceClient) { }\n\n  courses: Course[] = [];\n  user: User = new User();\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n    this.userService.profile().then(user => this.user = user);\n  }\n\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Course Navigator ({{courses.length}})</h1>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-3\\\">\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item active\\\">Courses</li>\\n          <li *ngFor=\\\"let course of courses\\\"\\n              (click)=\\\"selectCourse(course.id)\\\"\\n              class=\\\"list-group-item\\\">\\n            {{course.title}}\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col-3\\\">\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item active\\\">Modules</li>\\n          <li *ngFor=\\\"let module of modules\\\" class=\\\"list-group-item\\\">\\n            {{module.title}}\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col-3\\\">lessons</div>\\n      <div class=\\\"col-3\\\">widgets</div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {CourseNavigatorServiceClient} from \"../services/course-navigator.service.client\";\n\n@Component({\n  selector: 'app-course-navigator',\n  templateUrl: './course-navigator.component.html',\n  styleUrls: ['./course-navigator.component.css']\n})\nexport class CourseNavigatorComponent implements OnInit {\n\n  constructor(private service: CourseNavigatorServiceClient) { }\n\n  courses = [];\n  modules = [];\n\n  selectCourse(courseId) {\n    this.service.findAllModulesForCourses(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>{{course.title}}</h2>\\n  <app-module-list></app-module-list>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {Course} from \"../models/course.model.client\";\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n  course: Course = new Course();\n  loadCourse(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row mt-4\\\">\\n  <div *ngFor=\\\"let enrollment of enrollments\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5>Section Title:</h5>\\n          <p>{{enrollment.sectionTitle}}</p>\\n        </div>\\n        <button (click)=\\\"unenroll(enrollment)\\\" class=\\\"btn btn-primary btn-block\\\">\\n          Unenroll\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from \"@angular/core\";\nimport { SectionServiceClient } from \"../services/section.service.client\";\nimport { EnrollmentServiceClient } from \"../services/enrollment.service.client\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { CourseServiceClient } from \"../services/course.service.client\";\nimport { encodeUriSegment } from \"@angular/router/src/url_tree\";\n\n@Component({\n  selector: \"app-enrolled-sections\",\n  templateUrl: \"./enrolled-sections.component.html\",\n  styleUrls: [\"./enrolled-sections.component.css\"]\n})\nexport class EnrolledSectionsComponent implements OnInit {\n  constructor(\n    private enrollService: EnrollmentServiceClient,\n    private sectionService: SectionServiceClient,\n    private courseService: CourseServiceClient,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n  enrollments = [];\n\n  getSectionsForStudent() {\n    this.enrollService.getAllSectionsForStudent().then(enrollments => {\n      this.enrollments = enrollments;\n      this.getCourseTitles();\n    });\n  }\n\n  getCourseTitles() {\n    this.enrollments.forEach(enrollment => {\n      var sectionId = enrollment.sectionId;\n      this.sectionService.getSectionById(sectionId).then(section => {\n        enrollment[\"sectionTitle\"] = section.name;\n      });\n    });\n  }\n\n  unenroll(enrollment) {\n    var sectionId = enrollment.sectionId;\n    var enrollId = enrollment._id;\n    this.enrollService.unenroll(sectionId, enrollId).then(() => {\n      this.getSectionsForStudent();\n    });\n  }\n\n  ngOnInit() {\n    this.getSectionsForStudent();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid mt-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5>{{section.name}}</h5>\\n        </div>\\n        <p>\\n          <b>Total seats:</b> {{section.seats}}\\n        </p>\\n        <p>\\n          <b>Seats remaining:</b> {{section.seats - section.enrolled}}\\n        </p>\\n        <button *ngIf=\\\"((section.seats - section.enrolled) > 0) && isUserLoggedIn\\\"(click)=\\\"enroll(section)\\\" class=\\\"btn btn-primary btn-block\\\">\\n          Enroll\\n        </button>\\n      </li>\\n    </ul>\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { SectionServiceClient } from '../services/section.service.client';\nimport { EnrollmentServiceClient } from '../services/enrollment.service.client';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataSharingService } from '../services/data-sharing.service';\n\n\n@Component({\n  selector: 'app-enrollments',\n  templateUrl: './enrollments.component.html',\n  styleUrls: ['./enrollments.component.css']\n})\nexport class EnrollmentsComponent implements OnInit {\n  isUserLoggedIn: boolean;\n\n  constructor(    private sectionService: SectionServiceClient,\n    private enrollService: EnrollmentServiceClient,\n    private router: Router,\n    private dataSharingService: DataSharingService) { \n      this.dataSharingService.isUserLoggedIn.subscribe( value => {\n        this.isUserLoggedIn = value;\n      })\n    }\n\n  @Input() courseId;\n  @Input() course;\n  sections = [];\n  enrollments = [];\n\n  loadSections(courseId) {\n    this.courseId = courseId;\n\n    this.sectionService\n      .getAllSectionsForCourse(courseId)\n      .then(sections => {\n        this.sections = sections;\n      });\n  }\n\n  getSectionsForStudent() {\n    this.enrollService\n      .getAllSectionsForStudent()\n      .then(enrollments => {this.enrollments = enrollments});\n  }\n\n  enroll(section) {\n    this.enrollService.enroll(section._id).then(() => {\n      this.router.navigate([\"profile\"]);\n    });\n  }\n\n  unenroll(enrollment) {\n    var sectionId = enrollment.sectionId;\n    var enrollId = enrollment._id;\n    this.enrollService.unenroll(sectionId, enrollId).then(() => {\n      this.router.navigate([\"profile\"]);\n    });\n  }\n\n  ngOnInit() {\n    this.loadSections(this.course.id);\n    this.getSectionsForStudent();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<app-widget-list></app-widget-list>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {LessonServiceClient} from \"../services/lesson.service.client\";\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private service: LessonServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.loadLessons(this.moduleId);\n  }\n\n  loadLessons(moduleId) {\n    this.moduleId = moduleId;\n    console.log(moduleId);\n    this.service.findLessonsForModule(this.courseId, moduleId).then(lessons => this.lessons = lessons);\n  }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \".invalid-feedback {\\n  display: block;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control col-md-4\\\" name=\\\"username\\\" />\\n      <div *ngIf=\\\"usernameEmptyError\\\" class=\\\"invalid-feedback\\\">\\n        Please enter a username.\\n      </div>\\n      <div *ngIf=\\\"credentialsError\\\" class=\\\"invalid-feedback\\\">\\n          Invalid credentials.\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input [(ngModel)]=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"password\\\" class=\\\"form-control col-md-4\\\" name=\\\"password\\\" />\\n      <div *ngIf=\\\"passwordEmptyError\\\" class=\\\"invalid-feedback\\\">\\n          Please enter a password.\\n      </div>\\n    </div>\\n    <button (click)=\\\"validate(username, password)\\\" class=\\\"btn btn-primary btn-block col-md-4\\\">\\n      Login\\n    </button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from \"@angular/router\";\nimport { UserServiceClient } from '../services/user.service.client';\nimport { DataSharingService } from '../services/data-sharing.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor(private service: UserServiceClient,\n    private router: Router,\n    private dataSharingService: DataSharingService) { }\n\n  username;\n  password;\n  usernameEmptyError = false;\n  credentialsError = false;\n  passwordEmptyError = false;\n\n  validate(username, password) {\n    this.usernameEmptyError = false;\n    this.credentialsError = false;\n    this.passwordEmptyError = false;\n\n    if (!username) {\n      this.usernameEmptyError = true;\n    }\n    if (!password) {\n      this.passwordEmptyError = true;\n    }\n\n    if (!this.findUserByCredentials(username, password)) {\n      this.login(username, password)\n    } else {\n      this.credentialsError = true;\n    }\n  }\n\n  findUserByCredentials(username, password) {\n    this.service.findUserByCredentials(username, password);\n  }\n\n  login(username, password) {\n\n    this.service.login(username, password)\n    .then(() => this.dataSharingService.isUserLoggedIn.next(true))\n    .then(() => this.router.navigate(['profile'])\n    )\n  }\n\n\n\n  ngOnInit() {\n  }\n\n}","export class Course {\n  id: number;\n  title: string;\n}","export class User {\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  isAdmin: boolean;\n }\n ","module.exports = \"\\n.active.wbdv a {\\n  color: white;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <h1>Modules</h1>\\n    <ul class=\\\"list-group\\\">\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ModuleServiceClient} from \"../services/module.service.client\";\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Whiteboard</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home </a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav\\\">\\n      <li *ngIf=\\\"!isUserLoggedIn\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n      </li>\\n      <li *ngIf=\\\"isUserLoggedIn\\\" class=\\\"nav-item\\\">\\n        <a (click)=\\\"logout()\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Logout</a>\\n      </li>\\n      <li *ngIf=\\\"!isUserLoggedIn\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n      </li>\\n      <li *ngIf=\\\"isUserLoggedIn\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {Route, Router} from \"@angular/router\";\nimport { DataSharingService } from '../services/data-sharing.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  isUserLoggedIn: boolean;\n\n  constructor(private userService: UserServiceClient,\n    private router: Router, private dataSharingService: DataSharingService) { \n      this.dataSharingService.isUserLoggedIn.subscribe( value => {\n        this.isUserLoggedIn = value;\n    });\n    }\n\n  user;\n\n  logout() {\n    this.userService.logout()\n    .then(() => this.dataSharingService.isUserLoggedIn.next(false))\n    .then(() => this.router.navigate(['home']))\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <input name=\\\"username\\\"\\n      [(ngModel)]=\\\"user.username\\\" placeholder=\\\"username\\\" class=\\\"form-control col-md-4\\\" />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input name=\\\"firstName\\\"\\n      [(ngModel)]=\\\"user.firstName\\\" placeholder=\\\"first name\\\" class=\\\"form-control col-md-4\\\" />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input name=\\\"lastName\\\"\\n      [(ngModel)]=\\\"user.lastName\\\" placeholder=\\\"lastName\\\" class=\\\"form-control col-md-4\\\" />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input name=\\\"email\\\"\\n      [(ngModel)]=\\\"user.email\\\" placeholder=\\\"email\\\" class=\\\"form-control col-md-4\\\" />\\n    </div>\\n    <button (click)=\\\"update(user)\\\" class=\\\"btn btn-primary btn-block col-md-4\\\">\\n      Update\\n    </button>\\n  </form>\\n\\n\\n\\n\\n\\n  <a *ngIf=\\\"user.isAdmin\\\" routerLink=\\\"/admin\\\">\\n    Admin Controls\\n  </a>\\n  <app-enrolled-sections *ngIf=\\\"!user.isAdmin\\\"></app-enrolled-sections>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../models/user.model.client\";\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {Route, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n    private router: Router) { }\n\n  user: User = new User();\n  update(user: User) {\n    var body = {\n      username: user.username,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email\n    }\n    this.service.updateUser(body, user).then(() => this.router.navigate(['profile']));\n  }\n\n  ngOnInit() {\n    this.service.profile().then(user => this.user = user);\n  }\n\n}","module.exports = \".invalid-feedback {\\n  display: block;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n  <form novalidate>\\n    <div class=\\\"form-group\\\">\\n      <input required name=\\\"username\\\" [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control col-md-4\\\" />\\n      <div *ngIf=\\\"usernameError\\\" class=\\\"invalid-feedback\\\">\\n          Username is already taken.\\n      </div>\\n      <div *ngIf=\\\"usernameEmptyError\\\" class=\\\"invalid-feedback\\\">\\n          Please enter a username.\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input required name=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"password\\\" class=\\\"form-control col-md-4\\\" />\\n      <div *ngIf=\\\"passwordMatchError\\\" class=\\\"invalid-feedback\\\">\\n          Passwords do not match.\\n      </div>\\n      <div *ngIf=\\\"passwordEmptyError\\\" class=\\\"invalid-feedback\\\">\\n          Please enter a password.\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input required name=\\\"password2\\\" type=\\\"password\\\" [(ngModel)]=\\\"password2\\\" placeholder=\\\"verify password\\\" class=\\\"form-control col-md-4\\\" />\\n      <div *ngIf=\\\"passwordVerifyEmptyError\\\" class=\\\"invalid-feedback\\\">\\n          Please verify your password.\\n      </div>\\n    </div>\\n    <button (click)=\\\"validate(username, password, password2)\\\" class=\\\"btn btn-primary btn-block col-md-4\\\">\\n      Register\\n    </button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport { DataSharingService } from '../services/data-sharing.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient,\n              private dataSharingService: DataSharingService) { }\n\n  username;\n  password;\n  password2;\n  usernameError = false;\n  usernameEmptyError = false;\n  passwordEmptyError = false;\n  passwordMatchError = false;\n  passwordVerifyEmptyError = false;\n  \n  validate(username, password, password2) {\n    this.usernameError = false;\n    this.usernameEmptyError = false;\n    this.passwordMatchError = false;\n    this.passwordEmptyError = false;\n    this.passwordVerifyEmptyError = false;\n\n    if (password != password2) {\n      this.passwordMatchError = true;\n    }\n    if (!password) {\n      this.passwordEmptyError = true;\n    }\n    if (!password2) {\n      this.passwordVerifyEmptyError = true;\n    }\n    if (!username) {\n      this.usernameEmptyError = true;\n    }\n    if (this.isUsernameTaken(username)) {\n      this.usernameError = true;\n    }\n    if ((password == password) && !this.isUsernameTaken(username)\n      && password && password2 && username) {\n      this.register(username, password);\n    }\n  }\n\n  isUsernameTaken(username) {\n    this.service.findUserByUsername(username);\n  }\n\n  register(username, password) {\n    this.service\n      .createUser(username, password)\n      .then(() => this.dataSharingService.isUserLoggedIn.next(true))\n      .then(() => this.router.navigate(['profile']));\n  }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n          <app-section-list [course]=\\\"course\\\" [courseId]=\\\"course.id\\\"></app-section-list>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { CourseServiceClient } from \"../services/course.service.client\";\nimport { SectionServiceClient } from \"../services/section.service.client\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-section-editor',\n  templateUrl: './section-editor.component.html',\n  styleUrls: ['./section-editor.component.css']\n})\nexport class SectionEditorComponent implements OnInit {\n\n  constructor(\n    private sectionService: SectionServiceClient,\n    private courseService: CourseServiceClient,\n    private router: Router\n  ) { }\n\n  courses = []\n\n  ngOnInit() {\n    this.courseService.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \"#create-section {\\n  margin-bottom: 16px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <input [(ngModel)]=\\\"seats\\\" placeholder=\\\"Seats\\\" class=\\\"form-control\\\" name=\\\"seats\\\" required/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input [(ngModel)]=\\\"sectionName\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" name=\\\"sectionName\\\" required/>\\n    </div>\\n    <button (click)=\\\"createSection(sectionName, seats)\\\" id=\\\"create-section\\\" class=\\\"btn btn-primary btn-block\\\">Create Section</button>\\n  </form>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item flex-column align-items-start\\\">\\n      <div class=\\\"d-flex w-100 justify-content-between\\\">\\n        <h5>{{section.name}}</h5>\\n        <button (click)=\\\"deleteSection(section)\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <p>\\n        <b>Total seats:</b> {{section.seats}}\\n      </p>\\n      <p>\\n        <b>Seats remaining:</b> {{section.seats - section.enrolled}}\\n      </p>\\n      <button (click)=\\\"setEditingSection(section)\\\" id=\\\"edit-section\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editSection\\\" class=\\\"btn btn-primary btn-block\\\">\\n        Edit Section\\n      </button>\\n    </li>\\n  </ul>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"editSection\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit Section</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <input [(ngModel)]=\\\"editSeats\\\" placeholder=\\\"Seats\\\" class=\\\"form-control\\\" name=\\\"editSeats\\\" required/>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input [(ngModel)]=\\\"editSectionName\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" name=\\\"editSectionName\\\" required/>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button (click)=\\\"updateSection(sectionName, seats)\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-primary\\\">Update Section</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { SectionServiceClient } from \"../services/section.service.client\";\nimport { EnrollmentServiceClient } from \"../services/enrollment.service.client\";\n\n@Component({\n  selector: \"app-section-list\",\n  templateUrl: \"./section-list.component.html\",\n  styleUrls: [\"./section-list.component.css\"]\n})\nexport class SectionListComponent implements OnInit {\n  constructor(\n    private sectionService: SectionServiceClient,\n    private enrollService: EnrollmentServiceClient,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    //this.route.params.subscribe(params =>\n    //  this.loadSections(params[\"courseId\"])\n    //);\n  }\n\n  sectionName;\n  seats = \"\";\n  @Input() courseId;\n  @Input() course;\n  sections = [];\n  editSectionName = \"\";\n  editSeats = \"\";\n  editingSection;\n\n  loadSections(courseId) {\n    this.courseId = courseId;\n\n    this.sectionService\n      .getAllSectionsForCourse(courseId)\n      .then(sections => {\n        this.sections = sections;\n        this.sectionName = this.course.title + ' ' + (this.sections.length + 1);\n      });\n\n  }\n\n  createSection(name, seats) {\n    var body = {\n      name: name,\n      seats: seats,\n      courseId: this.courseId\n    };\n\n    this.sectionService.createSection(body, this.courseId).then(() => {\n      this.loadSections(this.courseId);\n    });\n  }\n\n  deleteSection(section) {\n    this.sectionService.deleteSection(section._id).then(() => {\n      this.loadSections(this.courseId);\n    });\n  }\n\n  updateSection() {\n    var sectionId = this.editingSection._id;\n    var body = {\n      name: this.editSectionName,\n      seats: this.editSeats,\n    }\n    this.sectionService.updateSection(body, sectionId).then(() => {\n      this.loadSections(this.courseId);\n    });\n  }\n\n  setEditingSection(section) {\n    this.editingSection = section;\n    this.editSeats = section.seats;\n    this.editSectionName = section.name;\n  }\n\n  ngOnInit() {\n    this.loadSections(this.course.id);\n  }\n}\n","import {Constants} from '../commons/constants';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CourseNavigatorServiceClient {\n  constructor(\n    private constants: Constants) {}\n\n  findAllCourses() {\n    return fetch(this.constants.COURSE_API_URL)\n      .then(response => response.json());\n  }\n  findAllModulesForCourses(courseId) {\n    return fetch(this.constants.COURSE_API_URL + '/' + courseId + '/module')\n      .then(response => response.json());\n  }\n}","import {Constants} from '../commons/constants';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CourseServiceClient {\n  constructor(\n    private constants: Constants) {}\n    \n  findAllCourses() {\n    return fetch(this.constants.COURSE_API_URL)\n      .then(response => response.json());\n  }\n  findCourseById(courseId) {\n    return fetch(this.constants.COURSE_API_URL + '/' + courseId)\n      .then(response => response.json());\n  }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class DataSharingService {\n    public isUserLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n}","import { Constants } from \"../commons/constants\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class EnrollmentServiceClient {\n  constructor(private constants: Constants) {}\n\n  enroll(sectionId) {\n    return fetch(this.constants.SECTION_API_URL + '/' + sectionId + '/enrollment', {\n      method: 'POST',\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      credentials: 'include',\n    }).then(response => response.json());\n  }\n\n  getAllSectionsForStudent() {\n    return fetch(this.constants.STUDENT_API_URL + '/section', {\n      credentials: 'include',\n    })\n      .then(response => response.json());\n  }\n\n  unenroll(sectionId, enrollId) {\n    return fetch(this.constants.SECTION_API_URL + '/' + sectionId + '/enrollment/' + enrollId, {\n      method: 'delete'\n    })\n  }\n}","import {Constants} from '../commons/constants';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LessonServiceClient {\n  constructor(\n    private constants: Constants) {}\n\n  findLessonsForModule(courseId, moduleId) {\n    return fetch(this.constants.COURSE_API_URL + '/' + courseId + '/module/' + moduleId + '/lesson')\n      .then(response => response.json());\n  }\n}","import {Constants} from '../commons/constants';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ModuleServiceClient {\n  constructor(\n    private constants: Constants) {}\n\n    findModulesForCourse(courseId) {\n      return fetch(this.constants.COURSE_API_URL + '/' + courseId + '/module')\n        .then(response => response.json());\n    }\n  }","import { Constants } from \"../commons/constants\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class SectionServiceClient {\n  constructor(private constants: Constants) {}\n\n  createSection(body, courseId) {\n    return fetch(this.constants.NODE_COURSE_API_URL + '/' + courseId + '/section', {\n      method: 'post',\n      body: JSON.stringify(body),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => response.json());\n  }\n\n  getAllSectionsForCourse(courseId) {\n    return fetch(this.constants.NODE_COURSE_API_URL + '/' + courseId + '/section', {\n      credentials: \"same-origin\"\n    })\n      .then(response => response.json());\n  }\n\n  getSectionById(sectionId) {\n    return fetch(this.constants.SECTION_API_URL + '/' + sectionId)\n      .then(response => response.json());\n  }\n\n  updateSection(body, sectionId) {\n    return fetch(this.constants.SECTION_API_URL + '/' + sectionId, {\n      method: 'put',\n      body: JSON.stringify(body),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => response.json());\n  }\n\n  deleteSection(sectionId) {\n    return fetch(this.constants.SECTION_API_URL + '/' + sectionId, {\n      method: 'delete'\n    }).then(response => response.json());\n  }\n}\n","import { Constants } from \"../commons/constants\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class UserServiceClient {\n  constructor(private constants: Constants) {}\n\n  findUserById(userId) {\n    return fetch(this.constants.USER_API_URL + \"/\" + userId).then(response =>\n      response.json()\n    );\n  }\n\n  findUserByUsername(username) {\n    return fetch(this.constants.USER_API_URL + \"/username\", {\n      body: JSON.stringify({\n        username: username,\n      }),\n      method: 'post',\n    }).then(response =>\n      response.json()\n    );\n  }\n\n  findUserByCredentials(username, password) {\n    return fetch(this.constants.USER_API_URL + \"/credentials\", {\n      body: JSON.stringify({\n        username: username,\n        password: password\n      }),\n      method: 'post',\n    }).then(response => response.json());\n  }\n\n  profile() {\n    return fetch(this.constants.NODE_API_URL + \"/profile\", {\n      credentials: \"include\" // include, same-origin, *omit\n    })\n      .then(response => response.json())\n      .catch(error => console.log(error));\n  }\n\n  login(username, password) {\n    return fetch(this.constants.NODE_API_URL + \"/login\", {\n      body: JSON.stringify({\n        username: username,\n        password: password\n      }),\n      credentials: \"include\", // include, same-origin, *omit\n      method: \"post\",\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => response.json());\n  }\n\n  logout() {\n    return fetch(this.constants.NODE_API_URL + \"/logout\", {\n      method: \"POST\"\n    })\n      .then(response => response.json())\n      .catch(error => console.log(error));\n  }\n\n  createUser(username, password) {\n    const user = {\n      username: username,\n      password: password\n    };\n    return fetch(this.constants.NODE_API_URL + \"/register\", {\n      body: JSON.stringify(user),\n      credentials: \"include\", // include, same-origin, *omit\n      method: \"post\",\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n  }\n\n  updateUser(body, user) {\n    return fetch(this.constants.USER_API_URL + \"/\" + user._id, {\n      method: \"put\",\n      body: JSON.stringify(body),\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(response => response.json());\n  }\n}\n","import {Constants} from '../commons/constants';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WidgetServiceClient {\n  constructor(\n    private constants: Constants) {}\n\n  findWidgetsForLesson(lessonId) {\n    return fetch(this.constants.LESSON_API_URL + '/' + lessonId + '/widget')\n      .then(response => response.json());\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <app-course-grid></app-course-grid>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let widget of widgets\\\">\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\n    <div *ngSwitchCase=\\\"'HeadingWidget'\\\">\\n      <div [ngSwitch]=\\\"widget.size\\\">\\n        <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n        <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n        <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n        <h4 *ngSwitchCase=\\\"'4'\\\">{{widget.text}}</h4>\\n        <h5 *ngSwitchCase=\\\"'5'\\\">{{widget.text}}</h5>\\n        <h6 *ngSwitchCase=\\\"'6'\\\">{{widget.text}}</h6>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'LinkWidget'\\\">\\n      <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n    </div>\\n    <div *ngSwitchCase=\\\"'ListWidget'\\\">\\n      <h1>ListWidget</h1>\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\"\\n            *ngFor=\\\"let item of widget.items.split('|')\\\">\\n          {{item}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Exam'\\\">\\n      <h1>Exam Widget</h1>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {WidgetServiceClient} from \"../services/widget.service.client\";\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  widgets = [];\n  setContext(params) {\n    this.context = params;\n    this.loadWidgets(params.lessonId);\n  }\n  loadWidgets(lessonId) {\n    this.service.findWidgetsForLesson(lessonId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n  ngOnInit() {\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}